---
layout: layoutpayme.njk
internalName: payme
pageName: payme
headerType: solid
---
<!--

to do

monitor block chain
store in KV
input amount ux
payment success ux
curreiences

--> 


 <!-- Main Content-->


<div id="paymentqrcode">
	<div class="d-flex justify-content-center">
		<a href="bitcoin:bc1q63vhza4jc7096w4skyzf6jtk30ylnf2ssmhpfj">bc1q63vhza4jc7096w4skyzf6jtk30ylnf2ssmhpfj</a>
	</div>
	<div class="d-flex justify-content-center">
		<img src="/assets/images/qrcode.png" />
	</div>
	<div class="d-flex justify-content-center" id="paymentamount">
	</div>
	<div class="d-flex justify-content-center" id="">
		Congratulations on deciding to pay in Bitcoin you are through the looking glass. 
	</div>
</div>
<div class="d-flex justify-content-center d-none" id="gotpayment">
</div>
 <script type="text/javascript">
 	//A90C158B-2C44-4221-A664-893304569B48

 	//get the paramaters
 	const queryString = window.location.search;
	const urlParams = new URLSearchParams(queryString);
	let amount = urlParams.get('amount');
	if (amount == null)
		amount = 0;

 	//set the bitcoin address
 	let btcAddress = "bc1q63vhza4jc7096w4skyzf6jtk30ylnf2ssmhpfj";
 	//note : we could update address here and generate the QR code would make changing it easier in the future.

 	let currentBalance = 0;
 	//note : we should get this dynamically
 	let currentExchange = 0.0000283036

 	//check balance function, pretty crude but good enough for us today, right now.
 	let checkBalance = () => {
 		console.log('checking balance')
 		fetchBalace(btcAddress,1)
 	}

 	//this function gets the current balance
 	let fetchBalace = (address,first = 0) => {
 		//get the current balance 
	   fetch("https://blockchain.info/q/addressbalance/" + btcAddress)
	  .then(function(response) {
	    return response.json();
	  })
	  .then(function(json) {
	  	//check if it was the first call and store the current balance
	  	if (first == 0)
	  	{
	  		console.log(json)
	    	currentBalance = parseInt(json, 10);
	    	//set the exchange
	    	exchangRate(currentExchange,amount)
	    	//set the timer
	    	setInterval(checkBalance, 10000);
	  	}
	    else
	    {
	    	//store the new balance
	    	newBalance = parseInt(json,10)
	    	//debug
	    	//newBalance = currentBalance*2;
	    	//console.log("from timer: "+newBalance);
	    	//console.log(currentBalance)
	    	//console.log(newBalance)
	    	if (currentBalance < newBalance)
	    	{
	    		//get the amount received
	    		let paymentReceived = newBalance-currentBalance;
	    		//turn the sats into BTC
	    		paymentReceived = paymentReceived / 100000000;
	    		//set the messages
	    		document.getElementById('gotpayment').innerHTML = `<br><br>We have a payment for the amount of ${paymentReceived} BTC, we assume it was you, if so thankyou<br><br>`
	    		//hide the qr code
	    		document.getElementById('paymentqrcode').classList.add('d-none');
	    		//show the got payment
	    		document.getElementById('gotpayment').classList.remove('d-none')

	    	}


	    }
	  });
 	}

 	//set the amount to pay
 	let exchangRate = (rate,amount) => {	
 		let message = "";
 		if (amount == 0)
 		{
 			//note : make it show how much do you want to pay input
 			message = "No invoice amount specified please take 5% off your invoice and pay that."
 		}
 		else
 		{
	 		let invoiceAmount = amount * rate;
	 		let discount = invoiceAmount * 0.05;
	 		let invoiceAmountWithDiscount = invoiceAmount - discount;
	 		message = `Invoice of Â£${amount} with 5% discount please pay ${invoiceAmountWithDiscount} BTC`

 		}
 		//alert(message)
 		document.getElementById('paymentamount').innerHTML = message;
 	}
 	//get the balance
	fetchBalace(btcAddress)




 </script>